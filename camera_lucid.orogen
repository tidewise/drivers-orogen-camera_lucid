name "camera_lucid"
# Optionally declare the version number
# version "0.1"

# If new data types need to be defined, they have to be put in a separate C++
# header, and this header will be loaded here
import_types_from "camera_lucidTypes.hpp"
# Finally, it is pretty common that headers are directly loaded from an external
# library. In this case, the library must be first used (the name is the
# library's pkg-config name) and then the header can be used. Following Rock
# conventions, a common use-case would be:
#
using_library "camera_lucid_arenasdk"
# import_types_from "camera_lucid_arenasdk"
# import_types_from "camera_lucid/CustomType.hpp"

# If this project uses data types that are defined in other oroGen projects,
# these projects should be imported there as well.
import_types_from "std"
import_types_from "base"

task_context "Task" do
    needs_configuration

    property "ip", "/std/string"
    property "frame_timeout", "/base/Time"
    property "frame_rate", "double"
    property "binning_selector", "std/string"
    property "binning_type", "std/string"
    property "binning_x", "int"
    property "binning_y", "int"
    property "decimation_selector", "std/string"
    property "decimation_type", "std/string"
    property "decimation_x", "int"
    property "decimation_y", "int"
    property "camera_format", "base/samples/frame/frame_mode_t"
    property "depth", "uint8_t"
    property "exposure_auto", "std/string"
    property "exposure_time", "/base/Time"
    property "width", "int"
    property "height", "int"
    property "offset_x", "int"
    property "offset_y", "int"

    output_port "frame", ro_ptr("base/samples/frame/Frame")
    periodic 0.1
end
